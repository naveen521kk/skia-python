name: Build and test

on:
  push:
    branches:
      - master
      - test
  pull_request:
    branches:
      - master
jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64]
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Print submodule commits
      run: git submodule status > submodule.txt
    - uses: actions/cache@v1
      id: cache
      with:
        path: skia\out\Release
        key: ${{ runner.os }}-${{ matrix.arch }}-skia-out-0-${{ hashFiles('submodule.txt') }}
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Set PATH
      run: |
        echo "$pwd\depot_tools"
        echo "$pwd\depot_tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      if: steps.cache.outputs.cache-hit != 'true'
    - uses: msys2/setup-msys2@v2
      with:
        release: false
        msystem: MINGW64
        install: >-
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-python2
          mingw-w64-x86_64-ninja
          git
    - name: Build Skia
      shell: msys2 {0}
      run: |
        cd skia
        python tools/git-sync-deps
        export CC=gcc
        bin/gn gen out/Release --args='cc="gcc" cxx="g++" is_official_build=true skia_enable_tools=true skia_use_system_libjpeg_turbo=false skia_use_system_libwebp=false skia_use_system_libpng=false skia_use_system_icu=false skia_use_system_harfbuzz=false skia_use_system_expat=false skia_use_system_zlib=false target_cpu="x86_64"'
        ninja -C out/Release skia skia.h experimental_svg_model
        cd ..
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: skia-${{ runner.os }}-${{ matrix.arch }}
        path: skia\out\Release
#     - name: Build python binding
#       env:
#         DISTUTILS_USE_SDK: 1
#       run: |
#         $path = vswhere -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
#         $args = '-arch=${{ matrix.arch }}'
#         if ($path) {
#             $path = join-path $path 'Common7\Tools\vsdevcmd.bat'
#             if (test-path $path) {
#                 cmd /s /c """$path"" $args && set" | where { $_ -match '(\w+)=(.*)' } | foreach {
#                     $null = new-item -force -path "Env:\$($Matches[1])" -value $Matches[2]
#                 }
#             }
#         }
#         python -m pip install -U pip
#         python -m pip install pybind11 numpy
#         python setup.py install
#     - name: Test
#       run: |
#         python -m pip install pytest glfw pillow
#         python -m pytest tests
