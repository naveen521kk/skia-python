name: Build and test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          - manylinux2014_x86_64
        python-version:
          - cp37-cp37m
    container: quay.io/pypa/${{ matrix.container }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Print submodule commits
      run: git submodule status > submodule.txt
    - name: Install system dependencies
      run: yum --disablerepo=epel install -y fontconfig-devel mesa-libGL-devel xorg-x11-server-Xvfb mesa-dri-drivers
    - uses: actions/cache@v1
      id: cache
      with:
        path: skia/out/Release
        key: ${{ matrix.container }}-skia-out-${{ hashFiles('submodule.txt') }}
    - name: Set PATH
      run: echo "$PWD/depot_tools" >> $GITHUB_PATH
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Build gn
      env:
        CC: gcc
        CXX: g++
        AR: ar
        CFLAGS: -Wno-deprecated-copy
        LDFLAGS: -lrt
      run: |
        git clone https://gn.googlesource.com/gn
        cd gn
        git checkout 981f46c64d1456d2083b1a2fa1367e753e0cdc1b
        python build/gen.py
        ninja -C out gn
        cd ..
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Build Skia
      run: |
        cd skia
        patch -p1 < ../patch/git-sync-deps.patch
        python tools/git-sync-deps
        cp -f ../gn/out/gn bin/gn  # Replace gn.
        bin/gn gen out/Release --args='is_official_build=true skia_enable_tools=true skia_use_system_libjpeg_turbo=false skia_use_system_libwebp=false skia_use_system_libpng=false skia_use_system_icu=false skia_use_system_harfbuzz=false extra_cflags_cc=["-frtti"] extra_ldflags=["-lrt"]'
        ninja -C out/Release skia skia.h experimental_svg_model
        cd ..
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Set up Python
      run: echo "/opt/python/${{ matrix.python-version }}/bin" >> $GITHUB_PATH
    - name: Build python binding
      run: |
        python -m pip install -U pip
        python -m pip install pybind11 numpy
        python setup.py install
    - name: Test
      run: |
        python -m pip install pytest glfw pillow
        xvfb-run -s "-screen 0 640x480x24" python -m pytest tests
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Print submodule commits
      run: git submodule status > submodule.txt
    - uses: actions/cache@v1
      id: cache
      with:
        path: skia/out/Release
        key: ${{ runner.os }}-skia-out-${{ hashFiles('submodule.txt') }}
    - name: Set up Python 2.7
      uses: actions/setup-python@v1
      with:
        python-version: 2.7
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Set PATH
      run: echo "$PWD/depot_tools" >> $GITHUB_PATH
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Build Skia
      run: |
        cd skia
        python tools/git-sync-deps
        bin/gn gen out/Release --args='is_official_build=true skia_enable_tools=true skia_use_system_libjpeg_turbo=false skia_use_system_libwebp=false skia_use_system_libpng=false skia_use_system_icu=false skia_use_system_harfbuzz=false extra_cflags_cc=["-frtti", "-mmacosx-version-min=10.9"]'
        ninja -C out/Release skia skia.h experimental_svg_model
        cd ..
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build python binding
      env:
        CC: clang
        CXX: clang++
      run: |
        python -m pip install -U pip
        python -m pip install pybind11 numpy
        python setup.py install
    - name: Test
      run: |
        python -m pip install pytest pyopengl pyopengl-accelerate pillow
        python -m pytest tests
    - name: Build docs
      run: |
        python -m pip install sphinx sphinx-rtd-theme
        python setup.py build_sphinx
    - name: Deploy docs to gh-pages
      if: github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [ x64 , x86]
        python-version: [3.6, 3.7]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Print submodule commits
      run: git submodule status > submodule.txt
    - uses: actions/cache@v1
      id: cache
      with:
        path: skia\out\Release
        key: ${{ runner.os }}-${{ matrix.arch }}-skia-out-0-${{ hashFiles('submodule.txt') }}
    - name: Set up Python 2.7
      uses: actions/setup-python@v1
      with:
        python-version: 2.7
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Set PATH
      run: |
        echo "$pwd\depot_tools"
        echo "$pwd\depot_tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Build Skia
      run: |
        cd skia
        python tools\git-sync-deps
        bin\gn gen out\Release --args='is_official_build=true skia_enable_tools=true skia_use_system_libjpeg_turbo=false skia_use_system_libwebp=false skia_use_system_libpng=false skia_use_system_icu=false skia_use_system_harfbuzz=false skia_use_system_expat=false skia_use_system_zlib=false extra_cflags_cc=[\"/GR\", \"/EHsc\", \"/MD\"] target_cpu=\"${{ matrix.arch }}\"'
        ninja -C out\Release skia skia.h experimental_svg_model
        cd ..
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build python binding
      env:
        DISTUTILS_USE_SDK: 1
      run: |
        $path = vswhere -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
        $args = '-arch=${{ matrix.arch }}'
        if ($path) {
            $path = join-path $path 'Common7\Tools\vsdevcmd.bat'
            if (test-path $path) {
                cmd /s /c """$path"" $args && set" | where { $_ -match '(\w+)=(.*)' } | foreach {
                    $null = new-item -force -path "Env:\$($Matches[1])" -value $Matches[2]
                }
            }
        }
        python -m pip install -U pip
        python -m pip install pybind11 numpy
        python setup.py install
    - name: Test
      run: |
        python -m pip install pytest glfw pillow
        python -m pytest tests
